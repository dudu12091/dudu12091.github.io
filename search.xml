<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux韩顺平学习笔记</title>
      <link href="/2021/09/29/linux_hsp/"/>
      <url>/2021/09/29/linux_hsp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相关课程学习资料请添加韩老师微信获取</p><p>微信号<code>hspfly</code></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>linux是一个开源、免费的操作系统。 其稳定性、 安全性、 处理多并发已经得到业界的认可，因此目前很多企业级项目都会部署到linux/unix系统上。</p><h3 id="Linux主要的发行版："><a href="#Linux主要的发行版：" class="headerlink" title="Linux主要的发行版："></a>Linux主要的发行版：</h3><p>​    Ubuntu, RedHat, CentOS, Debain, Fedora, SuSE, OpenSUSE</p><p>(本课程主要使用CentOS)</p><h3 id="Linux应用领域"><a href="#Linux应用领域" class="headerlink" title="Linux应用领域"></a>Linux应用领域</h3><ul><li><p><code>服务器领域</code></p><p>linux再服务器领域的应用是最强的</p><p>linux免费、稳定、高效等特点在这里得到了很好的体现， 尤其在一些高端领域尤为广泛（c/c++/php/java/python/go）</p></li><li><p><code>嵌入式领域</code></p><p>linux运行稳定、对网络的良好支持性、低成本， 且可以根据需要进行剪裁，内核最小可以达到几百KB等特点，使其近些年来再嵌入式领域广泛应用</p><p>主要应用： 机顶盒、数字电视、网络电话、程控交换机、手机、PDA、智能家居、智能硬件等都是其应用领域。以后再物联网中应用会更加广泛。</p></li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li>VMware Workstation Pro 15.5 </li><li>Centos7.6 DVD版 （目前主流的生产环境）</li><li>Centos8.1 DVD版 （未来的主流）</li></ol><p>在配置Cenots时， 网络连接模式要选NAT模式，避免造成IP冲突。</p><p><img src="/image-20211001130843302.png" alt="image-20211001130843302"></p><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><h3 id="虚拟机克隆"><a href="#虚拟机克隆" class="headerlink" title="虚拟机克隆"></a>虚拟机克隆</h3><p>如果你已经安装了一台linux操作系统， 还想要更多的， 没必要再重新安装， 直接克隆即可。</p><ul><li>方式1：直接拷贝一份安装好的虚拟机文件，然后用vmware打开</li><li>方式2：使用vmware的克隆操作。（注意：克隆时需要先关闭linux系统）</li></ul><h3 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h3><p>如果在使用虚拟机系统时，想要回到原先的摸一个状态，比如担心可能有些误操作造成系统异常，需要回到原先某个正常运行的状态，vmware提供了这样的功能，叫快照管理</p><p>快照管理类似于Git的分支管理，但使用时会占用一定的磁盘空间，建议在系统发生有意义的变化时使用。</p><h3 id="虚拟机迁移和删除"><a href="#虚拟机迁移和删除" class="headerlink" title="虚拟机迁移和删除"></a>虚拟机迁移和删除</h3><p>安装好的虚拟机，本质上就是（放在文件夹中的）文件。因此虚拟系统的迁移很方便，你可以把安装好的虚拟系统文件夹整体<strong>拷贝</strong>或者<strong>剪切</strong>到另外的位置使用。</p><p>删除也很简单，先在vmware中进行移除 （不会删除本地文件），再手动删除本地文件。</p><h3 id="windows和虚拟机共享文件"><a href="#windows和虚拟机共享文件" class="headerlink" title="windows和虚拟机共享文件"></a>windows和虚拟机共享文件</h3><p>安装vmtools</p><p>可以在windows下更好地管理vm虚拟机</p><p>可以设置wondows和centos的共享文件夹</p><p><img src="/image-20211001145806913.png" alt="image-20211001145806913"></p><p><img src="/image-20211001150308200.png" alt="image-20211001150308200"></p><h2 id="Linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Linux的文件系统采用级层式的树状目录结构，在此结构中的最上层是根目录”/“，然后在此目录下再创建其他的目录。</p><p><code>在Linux世界里，一切皆文件</code>，硬件设备、网络通信等资源也是通过文件管理。</p><ul><li><p>这样做最明显的好处是，开发者仅需要使用一套 API 和开发工具即可调取 Linux 系统中绝大部分的资源。</p></li><li><p>不利之处在于，使用任何硬件设备都必须与根目录下某一目录执行挂载操作，否则无法使用。我们知道，本身 Linux 具有一个以根目录为树根的文件目录结构，每个设备也同样如此，它们是相互独立的。如果我们想通过 Linux 上的根目录找到设备文件的目录结构，就必须将这两个文件系统目录合二为一，这就是挂载的真正含义。</p></li></ul><h3 id="具体目录结构"><a href="#具体目录结构" class="headerlink" title="具体目录结构"></a>具体目录结构</h3><p>了解即可</p><p>可以用<code>pwd</code>指令显示当前用户所在的目录</p><ul><li><p>/bin <code>【常用】</code>：</p><p>是Binary的缩写，这个目录存放着最经常使用的命令。</p></li><li><p>/sbin：</p><p>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</p></li><li><p>/home <code>【常用】</code> ：</p><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</p></li><li><p>/root <code>【常用】</code>：</p><p>该目录为系统管理员，也称作超级权限者的用户主目录。</p></li><li><p>/lib：</p><p>系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p></li><li><p>/lost+found：</p><p>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p></li><li><p>/etc <code>【常用】</code>：</p><p>所有的系统管理所需要的配置文件和子目录my.conf。</p></li><li><p>/usr <code>【常用】</code>：</p><p>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。</p></li><li><p>/boot <code>【常用】</code>：</p><p>存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</p></li><li><p>/proc <code>【不能动】</code>：</p><p>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息。</p></li><li><p>/srv <code>【不能动】</code>：</p><p>service的缩写，该目录存放一些服务启动之后需要提供的数据。</p></li><li><p>/sys <code>【不能动】</code>：</p><p>这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs。</p></li><li><p>/tmp：</p><p>这个目录是用来存放一些临时文件的。</p></li><li><p>/dev：</p><p>类似windows的设备管理器，把所有的硬件用文件的形式存储。</p></li><li><p>/media <code>【不能动】</code>：</p><p>linux系统会自动识别一些设备，例如U盘光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</p></li><li><p>/mnt <code>【常用】</code>：</p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里面的内容了。</p></li><li><p>/opt：</p><p>这是给主机额外安装软件所摆放的目录，如安装ORACLE数据库就可放到该目录下。默认为空。</p></li><li><p>/usr/local <code>【常用】</code>：</p><p>这是另一个给主机额外安装软件所安装的目录，一般是通过编译源码的方式安装的程序。</p></li><li><p>/var <code>【常用】</code>：</p><p>这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下，包括各种日志文件。</p></li><li><p>/selinux：</p><p>SELinux是一种安全子系统，它能控制程序只能访问特定文件，有三种工作模式， 可以自行设置。</p></li></ul><h2 id="Linux-远程连接"><a href="#Linux-远程连接" class="headerlink" title="Linux 远程连接"></a>Linux 远程连接</h2><p>为什么要远程连接Linux？</p><ol><li>Linux服务器是开发小组共享</li><li>正式上线的项目是运行在公网</li><li>因此程序员需要远程登录到Linux进行项目管理或者开发</li></ol><h3 id="远程登陆"><a href="#远程登陆" class="headerlink" title="远程登陆"></a>远程登陆</h3><p>xshell 7 <a href="https://www.netsarang.com/en/xshell/">XSHELL - The Industry’s Most Powerful SSH Client (netsarang.com)</a></p><ol><li><p>首先在虚拟机中通过ifconfig命令获取ip</p><img src="/image-20211001165231780.png" alt="image-20211001165231780" style="float: left; zoom: 80%;"  /></li><li><p>在xshell中新建会话，填入对应ip</p><img src="/image-20211001165423495.png" alt="image-20211001165423495" style="float: left; zoom: 80%;"  /></li><li><p>连接成功</p><img src = "/image-20211001165938748.png" alt="image-20211001165938748.png" style="float: left; zoom: 80%;" ></li></ol><h3 id="文件上传下载"><a href="#文件上传下载" class="headerlink" title="文件上传下载"></a>文件上传下载</h3><p>xshell只能进行远程命令式的操作，如果需要上传或下载文件，需要用到<code>Xftp</code> <a href="https://www.netsarang.com/zh/xftp/">XFTP - NetSarang Website</a></p><p>配置过程与xshell类似</p><ol><li><p>新建会话并输入对应主机ip，协议默认SFTP</p><img src="/image-20211001170906472.png" alt="image-20211001170906472" style="float: left; zoom: 80%;"  /></li><li><p>输入系统对应的用户名和密码</p><img src="/image-20211001171657031.png" alt="image-20211001171657031" style="float: left; zoom: 80%;"  /></li><li><p>连接成功</p><img src="/image-20211001172731187.png" alt="image-20211001172731187" style="float: left;zoom: 67%;" /></li><li><p>（如果有乱码，则在属性中修改编码格式）</p><img src="/image-20211001172459766.png" alt="image-20211001172459766" style="float: left; zoom: 67%;"  /><img src="/image-20211001172553054.png" alt="image-20211001172553054" style="float: left;zoom: 67%;" /></li></ol><h2 id="vi-amp-vim-编辑器"><a href="#vi-amp-vim-编辑器" class="headerlink" title="vi &amp; vim 编辑器"></a>vi &amp; vim 编辑器</h2><p>vim具有程序编辑的能力，可以看作是vi增强版本，可以生动地以字体颜色辨别语法的正确性，方便程序设计。代码补完、编译及错误跳转等方便编程的功能特别丰富，因此被广泛使用。</p><h3 id="vi-和-vim-常用的三种模式"><a href="#vi-和-vim-常用的三种模式" class="headerlink" title="vi 和 vim 常用的三种模式"></a>vi 和 vim 常用的三种模式</h3><ul><li><p>正常模式（默认模式）</p><p>在这个模式中，可以使用<code>上下左右按键</code>来移动光标，你可以使用<code>删除字符</code>或<code>删除整行</code>来处理档案内容，也可以使用<code>复制、粘贴</code>来处理文件数据</p></li><li><p>插入模式</p><p>按下<code>i,I,o,O,a,A,r,R</code>等任何一个字母之后才会进入编辑模式</p></li><li><p>命令行模式</p><p>按Esc退出插入模式，然后输入”:”进入命令行模式。在这个模式中，可以提供你相关指令，完成读取、存盘、替换、离开vim、显示行号等动作</p></li></ul><p><em><strong>各模式相互切换示意图</strong></em></p><img src="/image-20211001190603554.png" alt="image-20211001190603554" style=" float:left;zoom: 50%;" /><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li>拷贝当前行 【yy】，拷贝当前向下5行 【5yy】，粘贴 【p】</li><li>删除当前行 【dd】，删除当前向下5行 【5dd】</li><li>在文件中查找某个单词，在<code>命令行模式</code>下输入【/关键字】，回车查找，按n查找下一个</li><li>设置文件行号【set nu】，取消文件行号【set nonu】</li><li>编辑文件，到达文档最末行/首行，<code>正常模式</code>下输入【G】/【gg】</li><li>撤销输入，在<code>正常模式</code>下输入【u】</li><li>编辑文件，光标移动到某行, <code>正常模式下</code>输入【shift+g】<ul><li>显示行号：set nu</li><li>输入行号这个数</li><li>输入shift+g</li></ul></li></ul><p>*<strong>Vim键盘图</strong></p><img src="/image-20211001200549477.png" alt="image-20211001200549477" style="float:left;zoom: 80%;" /><h2 id="关机-、-重启和用户登录注销"><a href="#关机-、-重启和用户登录注销" class="headerlink" title="关机 、 重启和用户登录注销"></a>关机 、 重启和用户登录注销</h2><h3 id="关机-amp-重启命令"><a href="#关机-amp-重启命令" class="headerlink" title="关机 &amp; 重启命令"></a>关机 &amp; 重启命令</h3><ul><li><p>shutdown -h now：表示立即关机</p></li><li><p>shutdown -h 1：表示1分钟后关机 （直接输入shutdown等效于shutdown -h 1）</p></li><li><p>shutdown -r now：立即重启</p></li><li><p>halt：关机，等效于shutdown -h now</p></li><li><p>reboot：重启，等效于shutdown -r now</p></li><li><p>sync：把内存的数据同步到磁盘</p><p><strong>当我们关机或者重启时，都应该先执行一下sync，防止数据丢失</strong></p><p><strong>现在的shutdown、halt、reboot等命令均已在关机前进行了sync</strong></p></li><li><p>logout：注销用户，<strong>在图形运行级别无效，在运行级别3有效</strong>。</p></li></ul><h3 id="用户登录和注销"><a href="#用户登录和注销" class="headerlink" title="用户登录和注销"></a>用户登录和注销</h3><ul><li><p>登陆时尽量少使用root账号，因为他是系统管理员，拥有最大权限。使用时要注意避免操作失误。可以利用普通用户登录，登录后再用”su - 用户名“来切换成系统管理员身份。</p></li><li><p>在提示符下驶入logout即可注销用户</p><p><strong>logout注销指令在图形运行级别无效，在运行级别3下有效。</strong></p><p><strong>运行级别这个概念，后面介绍。</strong></p></li></ul><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>基本语法 <code>useradd 用户名</code></p><p>案例：添加一个用户milan <strong>==&gt;</strong> useradd milan</p><p> 默认该用户的家目录在/home/milan</p><p>当创建用户成功后，会自动创建和用户同名的家目录</p><p>也可以通过<code>useradd -d 指定目录 用户名</code>，给新创建的用户指定家目录</p><h3 id="指定-amp-修改密码"><a href="#指定-amp-修改密码" class="headerlink" title="指定 &amp; 修改密码"></a>指定 &amp; 修改密码</h3><p>基本语法 <code>passwd 用户名</code></p><p>案例：给milan指定密码 <strong>==&gt;</strong> passwd milan</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>基本语法 <code>userdel 用户名</code></p><p>案例1：删除用户milan，但要保留家目录 <strong>==&gt;</strong> userdel milan</p><p>案例2：删除用户milan以及主目录（home/milan） <strong>==&gt;</strong> userdel -r milan</p><p><strong>一般情况下建议保留家目录</strong></p><h3 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h3><p>基本语法 <code>id 用户名</code></p><p>案例：查询root信息 <strong>==&gt;</strong> id root</p><p>当用户不存在时，返回无此用户</p><h4 id="查询当前用户-登录用户"><a href="#查询当前用户-登录用户" class="headerlink" title="查询当前用户/登录用户"></a>查询当前用户/登录用户</h4><p>基本语法 </p><ul><li><code>whoami</code> 查询当前用户</li><li><code>who am i</code> 查询登录用户</li></ul><h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><p>基本语法 <code>su - 用户名</code></p><p>在Linux中，如果当前用户的权限不够，可以通过su - 指令切换到高权限用户，比如root。从权限高的用户切换到权限低的用户不需要输入密码，反之则需要。当需要返回到原来用户时，使用<code>exit/logout</code>指令。</p><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><p>类似于角色，系统可以对有共性/权限的多个用户进行统一的管理。</p><p><strong>每个用户至少要属于一个组！</strong></p><img src="/image-20211001231506984.png" alt="image-20211001231506984" style="float:left;zoom:80%;" /><p>基本语法</p><ul><li>添加组 <code>groupadd 组名</code></li><li>删除组 <code>groupdel 组名</code></li><li>创建用户时指定组 <code>useradd -g 组名 用户名</code></li><li>修改用户组 <code>usermod -g 组名 用户名</code></li></ul><h3 id="用户和组相关文件"><a href="#用户和组相关文件" class="headerlink" title="用户和组相关文件"></a>用户和组相关文件</h3><ol><li> /etc/passwd 文件</li></ol><ul><li>用户（user）的配置文件，记录用户的各种信息。</li><li>每行的含义：用户名：口令：用户标识号：注释性描述：主目录：登录shell</li></ul><ol start="2"><li> /etc/shadow 文件</li></ol><ul><li>口令配置文件</li><li>每行的含义：登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志</li></ul><ol start="3"><li> /etc/group 文件</li></ol><ul><li>组（group）的配置文件，记录Linux包含的组的信息。</li><li>每行含义：组名：口令：组标识号：组内用户列表（隐藏）</li></ul><h2 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h2><p>共有7个运行级别：</p><ol start="0"><li><p>关机</p></li><li><p>单用户【找回丢失密码】</p></li><li><p>多用户状态没有网络服务</p></li><li><p>多用户状态有网络服务</p></li><li><p>系统未使用保留给用户</p></li><li><p>图形界面</p></li><li><p>系统重启</p></li></ol><p>常用运行级别是3和5，也可以指定默认运行级别，后面演示。</p><h3 id="指定运行级别"><a href="#指定运行级别" class="headerlink" title="指定运行级别"></a>指定运行级别</h3><p>基本指令 <code>init [0123456]</code></p><h3 id="Centos7后运行级别说明"><a href="#Centos7后运行级别说明" class="headerlink" title="Centos7后运行级别说明"></a>Centos7后运行级别说明</h3><p>在Centos7以前，在/etc/inittab文件中进行修改</p><p>在Centos7以后进行了简化，如下：</p><p>​    multi-user.target: analogous to runlevel 3</p><p>​    graphical.target: analogous to runlevel 5</p><p>查看当前默认运行级别 <code>systemctl get-default</code></p><p>设置默认运行级别 <code>systemctl set-default xxx.target</code></p><h2 id="找回root密码-【面试题】"><a href="#找回root密码-【面试题】" class="headerlink" title="找回root密码 【面试题】"></a>找回root密码 【面试题】</h2><p>不同版本的系统操作流程略有区别，这里适用于Centos7之后的版本。</p><ol><li><p>首先启动系统，进入开机界面，在页面中按”e”进入编辑界面</p><img src="/image-20211002000436645.png" alt="image-20211002000436645" style="float:left;zoom:80%;" /></li><li><p>进入编辑界面，使用键盘上的上下键把光标往下移动，找到以”linux16”开头内容所在的行数，在行的最后面输入 <code>init=/bin/sh</code></p><img src="/image-20211002000601694.png" alt="image-20211002000601694" style="float:left;zoom:80%;" /></li><li><p>输入完成后，按快捷键<code>Ctrl + x</code>进入单用户模式</p></li><li><p>在光标闪烁的位置输入<code>mount -o remount,rw /</code>, 然后按回车键</p><img src="/image-20211002000744156.png" alt="image-20211002000744156" style="float:left"  /></li><li><p>在新的一行最后面输入<code>passwd</code>， 完成后按键盘的回车键（Enter）。输入密码，<strong>然后再次确认密码即</strong>可(<strong>密码长度最好8位以上,但不是必须的</strong>), 密码修改成功后，会显示passwd…..的样式，说明密码修改成功</p><img src="/image-20211002001001897.png" alt="image-20211002001001897" style="float:left"  /></li><li><p>在鼠标闪烁的位置中（最后一行中）输入<code>touch /.autorelabel</code>，完成后按键盘的回车键（Enter）</p></li><li><p>继续在光标闪烁的位置中，输入<code>exec /sbin/init</code>，完成后按键盘的回车键（Enter）,等待系统自动修改密码(<strong>这个过程时间可能有点长，耐心等待</strong>)，完成后，系统会自动重启, <strong>新的密码生效</strong>了</p></li></ol><h2 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h2><ul><li><code>man [命令或配置文件] </code>（获得帮助信息）</li><li><code>help 命令</code> （获得shell内置命令得帮助信息）</li></ul><h2 id="references"><a href="#references" class="headerlink" title="references"></a>references</h2><p><a href="https://www.bilibili.com/video/BV1Sv411r7vd?spm_id_from=333.999.0.0">【小白入门 通俗易懂】2021韩顺平 一周学会Linux_哔哩哔哩_bilibili</a></p><p>[Linux一切皆文件（包含好处和弊端） (biancheng.net)](<a href="http://c.biancheng.net/view/2852.html#:~:text=Linux">http://c.biancheng.net/view/2852.html#:~:text=Linux</a> 中所有内容都是以文件的形式保存和管理的，即一切皆文件，普通文件是文件，目录（Windows,下称为文件夹）是文件，硬件设备（键盘、监视器、硬盘、打印机）是文件，就连套接字（socket）、网络通信等资源也都是文件。 Linux系统中，文件具体可)</p>]]></content>
      
      
      <categories>
          
          <category> linux系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/29/hello-world/"/>
      <url>/2021/09/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> categories_test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tags_test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
